// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int   @id @default(autoincrement())
  username  String   @unique
  image     String?
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]

  // @@map("users")
}

model MenuItem {
  id          Int         @id @default(autoincrement())
  name        String      @unique
  image       String?
  category    ItemCategory
  description String?
  isActive    Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orders      Order[]

  // @@map("menu_items")
}

model Order {
  id           Int        @id @default(autoincrement())
  userId       Int
  userDisplay  String?
  menuItemId   Int
  orderDate    DateTime   @default(now())
  sugarLevel   SugarLevel?
  iceLevel     IceLevel?
  specialNotes String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  user         User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  menuItem     MenuItem   @relation(fields: [menuItemId], references: [id])

  // @@map("orders")
}

enum ItemCategory {
  COFFEE
  TEA
  MILK_TEA
  SPECIALTY_DRINK
  SNACK
  DESSERT
}

enum SugarLevel {
  NO_SUGAR     // 0%
  LOW_SUGAR    // 25%
  NORMAL_SUGAR // 50%
  HIGH_SUGAR   // 75%
  EXTRA_SUGAR  // 100%
}

enum IceLevel {
  NO_ICE
  LESS_ICE
  NORMAL_ICE
  EXTRA_ICE
  HOT
}